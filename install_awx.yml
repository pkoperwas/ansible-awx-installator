- name: Install AWX
  hosts: localhost
  gather_facts: false
  ignore_errors: True  
  tasks:

    - name: Install k3s
      ansible.builtin.raw: curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644

    - name: Install packages
      dnf:
        name: git, make, jq
        state: latest

    - name: Clone awx-operator repo
      ansible.builtin.git:
        repo: https://github.com/ansible/awx-operator.git
        dest: /root/awx-operator

    - name: Check latest relase of awx-operator
      ansible.builtin.raw: curl -s https://api.github.com/repos/ansible/awx-operator/releases/latest | grep tag_name | cut -d '"' -f 4
      register: version_output

    - name: Checkout latest version awx-operator
      ansible.builtin.git:
        repo: https://github.com/ansible/awx-operator.git
        version: "{{ version_output.stdout }}" 
        dest: /root/awx-operator

    - name: Create awx namespace @ k3s
      ansible.builtin.raw: kubectl create ns awx

    - name: Set context @ k3s
      ansible.builtin.raw: kubectl config set-context --current --namespace=awx

    - name: Make deploy awx-operator
      ansible.builtin.raw: export NAMESPACE=awx && cd /root/awx-operator && make deploy

    - name: Waiting 5 minutes for deployment...
      ansible.builtin.pause:
        minutes: 5

    - name: Create Static data PVC
      ansible.builtin.raw: kubectl apply -f public-static-pvc.yaml -n awx

    - name: Create AWX Instance deployment 
      ansible.builtin.raw: kubectl apply -f awx-instance-deployment.yml -n awx

    - name: Replace AWX logo to Ansible Automation Platform
      ansible.builtin.raw: sh awx2tower.sh

    - name: Modify traefik instance for ingresss traffic http vhost http://ansible.local/
      ansible.builtin.raw: kubectl apply -f awx-traefik-ingress.yml        

    - name: Waiting 5 minutes for deployment...
      ansible.builtin.pause:
        minutes: 5

    - name: Check admin password for awx gui
      ansible.builtin.raw: kubectl -n awx get secret awx-admin-password -o jsonpath="{.data.password}" | base64 --decode
      register: passwd_output

    - name: Installation summary 
      debug:
        msg: 
          - "Please open your browser and go to the site http://ansible.local/#/login login: admin + password: {{ passwd_output.stdout }}"          
          - "Your desktop must resolve FQDN ansible.local to your server IP address, you can fake it on linux/windows hosts file"
          - "If page doesn't load and there's bad gateway info its a good sign, you have to wait a few minutes for final deployment"
